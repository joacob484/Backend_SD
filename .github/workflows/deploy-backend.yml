name: Deploy Backend to GCP VM

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: master-might-274420
  GCP_VM_NAME: faltauno-vm
  GCP_ZONE: us-central1-a

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Deploy Backend with Zero-Downtime
        run: |
          gcloud compute ssh augus@${{ env.GCP_VM_NAME }} \
            --zone=${{ env.GCP_ZONE }} \
            --command="
              set -e
              
              cd ~/Backend_SD
              
              # Discard any local changes and pull latest code
              git reset --hard HEAD
              git clean -fd
              git pull origin main
              
              # Make script executable
              chmod +x deploy-zero-downtime.sh
              
              # Run zero-downtime deployment script
              bash deploy-zero-downtime.sh
            "
      
      - name: Verify deployment
        run: |
          echo "‚è≥ Waiting 30 seconds for deployment to stabilize..."
          sleep 30
          
          echo "üîç Checking backend health..."
          gcloud compute ssh augus@${{ env.GCP_VM_NAME }} \
            --zone=${{ env.GCP_ZONE }} \
            --command="
              echo '=== Container Status ==='
              docker ps --format '{{.Names}}: {{.Status}}' | grep -E 'backend|redis|rabbit|postgres'
              
              echo -e '\n=== Health Check ==='
              curl -sS http://localhost:8080/actuator/health || echo 'Health endpoint failed'
              
              echo -e '\n=== Readiness Check ==='
              curl -sS http://localhost:8080/actuator/health/readiness || echo 'Readiness endpoint failed'
            "
      
      - name: Deployment Summary
        if: always()
        run: |
          echo "======================================"
          echo "  BACKEND DEPLOYMENT SUMMARY"
          echo "======================================"
          echo "Status: ${{ job.status }}"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Author: ${{ github.actor }}"
          echo "======================================"
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Backend deployed successfully with zero-downtime!"
            echo "üöÄ Application is running at http://34.45.130.122:8080"
            echo "üìä Health: http://34.45.130.122:8080/actuator/health"
          else
            echo "‚ùå Deployment failed - check logs above"
            echo "üí° Previous version should still be running"
          fi
