steps:
  # ═══════════════════════════════════════════════════════════
  # STEP 1: BUILD DOCKER IMAGE - SIN CACHE
  # ═══════════════════════════════════════════════════════════
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: 
      - 'build'
      - '--no-cache'
      - '--progress=plain'
      - '-t'
      - 'gcr.io/$PROJECT_ID/faltauno-backend:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/faltauno-backend:latest'
      - '-f'
      - 'Dockerfile.cloudrun'
      - '.'
    timeout: '1200s'  # 20 minutes para build completo

  # ═══════════════════════════════════════════════════════════
  # STEP 2: VERIFICAR QUE EL JAR EXISTE EN LA IMAGEN
  # ═══════════════════════════════════════════════════════════
  - name: 'gcr.io/cloud-builders/docker'
    id: 'verify-jar'
    args:
      - 'run'
      - '--rm'
      - '--entrypoint=sh'
      - 'gcr.io/$PROJECT_ID/faltauno-backend:$BUILD_ID'
      - '-c'
      - 'ls -lah /app/app.jar && echo "JAR size:" && du -h /app/app.jar && echo "First 20 classes in JAR:" && jar tf /app/app.jar | grep "\.class$" | head -20'
    waitFor: ['build-image']

  # ═══════════════════════════════════════════════════════════
  # STEP 3: PUSH IMAGE TO REGISTRY
  # ═══════════════════════════════════════════════════════════
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: 
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/faltauno-backend'
    waitFor: ['verify-jar']

  # ═══════════════════════════════════════════════════════════
  # STEP 4: DEPLOY TO CLOUD RUN
  # ═══════════════════════════════════════════════════════════
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-cloudrun'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod +x ./scripts/cloudrun-deploy.sh
        ./scripts/cloudrun-deploy.sh "${_SPRING_DATASOURCE_PASSWORD}" "${_REDIS_HOST}" "${_POSTGRES_HOST}" "${_CLOUDSQL_INSTANCE}" "${_SPRING_DATASOURCE_URL}" "${_SPRING_DATASOURCE_USERNAME}" "$BUILD_ID"
    env:
      - 'GCP_PUBSUB_ENABLED=${_GCP_PUBSUB_ENABLED}'
      - 'GCP_PUBSUB_TOPIC=${_GCP_PUBSUB_TOPIC}'
      - 'GCP_PUBSUB_SUBSCRIPTION=${_GCP_PUBSUB_SUBSCRIPTION}'
      - 'FRONTEND_URL=${_FRONTEND_URL}'
      - 'JWT_SECRET=${_JWT_SECRET}'
      - 'GOOGLE_CLIENT_ID=${_GOOGLE_CLIENT_ID}'
      - 'GOOGLE_CLIENT_SECRET=${_GOOGLE_CLIENT_SECRET}'
    secretEnv: ['SPRING_DATASOURCE_PASSWORD']
    waitFor: ['push-image']
    timeout: '600s'

# ═══════════════════════════════════════════════════════════
# TIMEOUT GLOBAL Y OPCIONES
# ═══════════════════════════════════════════════════════════
timeout: '2400s'  # 40 minutes total

options:
  machineType: 'E2_HIGHCPU_8'  # 8 vCPUs para build más rápido
  logging: CLOUD_LOGGING_ONLY
  logStreamingOption: STREAM_ON

# Fetch secret from Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/master-might-274420/secrets/db-password/versions/latest
    env: 'SPRING_DATASOURCE_PASSWORD'

images:
  - 'gcr.io/$PROJECT_ID/faltauno-backend:$BUILD_ID'

substitutions:
  _SPRING_DATASOURCE_PASSWORD: "REPLACE_AT_SUBMIT"
  _REDIS_HOST: "10.128.0.2"
  _POSTGRES_HOST: "postgres"
  _CLOUDSQL_INSTANCE: "master-might-274420:us-central1:faltauno-db"
  _SPRING_DATASOURCE_USERNAME: "app"
  _SPRING_DATASOURCE_URL: "jdbc:postgresql:///faltauno_db?cloudSqlInstance=master-might-274420:us-central1:faltauno-db&socketFactory=com.google.cloud.sql.postgres.SocketFactory"
  _GCP_PUBSUB_ENABLED: "false"
  _GCP_PUBSUB_TOPIC: "faltauno-events"
  _GCP_PUBSUB_SUBSCRIPTION: "faltauno-events-sub"
  _FRONTEND_URL: "https://faltauno-frontend-169771742214.us-central1.run.app"
  _JWT_SECRET: "REPLACE_AT_SUBMIT"
  _GOOGLE_CLIENT_ID: "REPLACE_AT_SUBMIT"
  _GOOGLE_CLIENT_SECRET: "REPLACE_AT_SUBMIT"
